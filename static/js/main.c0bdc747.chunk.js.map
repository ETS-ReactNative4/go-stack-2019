{"version":3,"sources":["components/Header/styles.js","components/Header/index.js","store/modules/cart/actions.js","services/api.js","utils/format.js","pages/Home/styles.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","styles/global.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/index.js","App.js","index.js","assets/images/logo.svg","assets/images/background.svg"],"names":["Container","styled","header","Cart","Link","connect","state","cartSize","cart","length","to","src","logo","alt","size","color","addToCart","product","type","removeFromCart","id","updateAmount","amount","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","ProductList","ul","darken","Home","products","handleAddProduct","props","get","response","data","map","priceFormatted","price","this","setState","key","image","title","onClick","Component","reduce","dispatch","bindActionCreators","CartActions","div","ProductTable","table","Total","subtotal","total","decrement","readOnly","value","increment","Routes","path","exact","component","createGlobalStyle","background","combineReducers","action","produce","draft","productIndex","findIndex","p","push","splice","Number","store","createStore","rootReducer","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c0bdc747.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 0.7\n  }\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import React from 'react';\nimport { MdShoppingBasket } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Container, Cart } from './styles';\nimport logo from '../../assets/images/logo.svg'\n\nfunction Header({ cartSize }) {\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"Rocket Shoes\" />\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>My cart</strong>\n          <span>{ cartSize } items</span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  );\n}\n\nexport default connect(state => ({\n  cartSize: state.cart.length,\n}))(Header);\n","export function addToCart(product) {\n  return {\n    // every action has a type\n    type: '@cart/ADD',\n\n    // and content\n    product,\n  }\n};\n\nexport function removeFromCart(id){\n  return {\n    type: '@cart/REMOVE',\n    id\n  }\n}\n\nexport function updateAmount(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT',\n    id,\n    amount\n  }\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333' // 3333 because of json-server port configured\n});\n\nexport default api;\n","export const { format: formatPrice } = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n})\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #FFF;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #FFF;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')}\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'; // connecting this component with states of REdux\nimport { bindActionCreators } from 'redux';\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport { formatPrice } from '../../utils/format';\n\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  state = {\n    products: [],\n  }\n\n  async componentDidMount() {\n    const response = await api.get('/products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price)\n    }))\n\n    this.setState({products: data});\n  }\n\n  handleAddProduct = product => {\n    // every componentn which we connect with Redux, that we use Connect\n    // receives a property called dispatch (this.props.dispatch), which fires an action into Redux\n\n    /* OLD MANNER BEFORE SESPARATE ACTIONS IN ANOTHER FILE\n       AND USING ACTIONS AS PROPS\n    const { dispatch } = this.props;\n\n    // and we implement our action:\n    dispatch({\n      // every action has a type\n      type: 'ADD_TO_CART',\n\n      // and content\n      product,\n    });\n    dispatch(addToCart(product));\n    */\n\n    const { addToCart } = this.props;\n\n    addToCart(product);\n\n  }\n\n  render() {\n    const { products } = this.state;\n    const { amount } = this.props;\n    return (\n      <ProductList>\n        { products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n            <button type=\"button\" onClick={() => this.handleAddProduct(product)}>\n              <div>\n                <MdAddShoppingCart size={16} color=\"#FFF\" /> {amount[product.id] || 0}\n              </div>\n\n              <span>Add to cart</span>\n            </button>\n          </li>\n        )) }\n      </ProductList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {}),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #FFF;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  button {\n    background: #7159c1;\n    color: #fff;\n    border: 0;\n    border-radius: 4px;\n    padding: 12px 20px;\n    font-weight: bold;\n    text-transform: uppercase;\n    transition: background 0.2s;\n\n    &:hover {\n      background: ${darken(0.03, '#7159c1')}\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #555;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators } from 'redux';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { MdDelete, MdRemoveCircleOutline, MdAddCircleOutline } from 'react-icons/md';\nimport { Container, ProductTable, Total } from './styles';\n\nimport { formatPrice } from '../../utils/format';\n\nfunction Cart ({ cart, removeFromCart, updateAmount, total }) {\n  function increment(product) {\n    updateAmount(product.id, product.amount + 1);\n  }\n\n  function decrement(product) {\n    updateAmount(product.id, product.amount - 1);\n  }\n\n  return (\n      <Container>\n        <ProductTable>\n        <thead>\n          <tr>\n            <th></th>\n            <th>PRODUCT</th>\n            <th>AMT</th>\n            <th>SUBTOTAL</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { cart.map(product => (\n            <tr>\n              <td>\n                <img src={product.image} alt={product.title} />\n              </td>\n              <td>\n                <strong>{product.title}</strong>\n                <span>{product.priceFormatted}</span>\n              </td>\n              <td>\n                <div>\n                  <button type=\"button\" onClick={() => decrement(product)}>\n                    <MdRemoveCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                  <input type=\"number\" readOnly value={product.amount} />\n                  <button type=\"button\" onClick={() => increment(product)}>\n                    <MdAddCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                </div>\n              </td>\n              <td>\n                <strong>{product.subtotal}</strong>\n              </td>\n              <td>\n                { /* See that we can use dispatch with inline code instead a separated method */ }\n                <button type=\"button\" onClick={() =>\n                  removeFromCart(product.id)\n                }>\n                  <MdDelete size={15} color=\"#7159c1\" />\n                </button>\n              </td>\n            </tr>\n          )) }\n        </tbody>\n        </ProductTable>\n\n        <footer>\n          <button type=\"button\">Finish order</button>\n\n          <Total>\n            <span>GENERAL TOTAL</span>\n            <strong>{total}</strong>\n          </Total>\n        </footer>\n      </Container>\n    );\n}\n\n// mapping states and converting them into properties (props) of Component\n/**\n * It is same thing of:\n  export default connect(state => ({\n    cart: state.cart,\n  }))(Cart);\n */\nconst mapStateToProps = state => ({\n  cart: state.cart.map(product => ({\n    ...product, // putting all current fields\n    subtotal: formatPrice(product.price*product.amount) // adding new field of suntotal\n  })),\n  total: formatPrice(state.cart.reduce((total, product) => total + product.price * product.amount, 0))\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nexport default function Routes(){\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home}></Route>\n      <Route path=\"/cart\" component={Cart}></Route>\n    </Switch>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: boder-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px 'Roboto', sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import  { combineReducers } from 'redux';\n\nimport cart from './cart/reducer';\n// import user from './user/reducer.js';\n\nexport default combineReducers({\n  cart,\n  // and another reducers\n  // user,\n})\n","import produce from 'immer';\n\nexport default function cart(state = [], action) {\n\n  switch(action.type){\n    case '@cart/ADD':\n      // the param 'state' in produce is the real state\n      // the param 'draft' is a copy of state\n      return produce(state, draft => {\n        // every changes within this draft will reflext into state\n\n        // in this case draft is the product (content of dispatch)\n\n        // verifying if user is adding a product which was already added before\n        // remembering that findIndex returns the index of found item\n        const productIndex = draft.findIndex(p => p.id === action.product.id);\n        if(productIndex >= 0){\n          // incrementing amount\n          draft[productIndex].amount += 1;\n        }else{\n          // adding new with 1 amount\n          draft.push({\n            ...action.product, // we are using spread op. because we need to add amount\n            amount: 1,         // if amount did not exist a simple draft.push(action.product)\n          });\n        }\n      })\n\n    /* OLD MANNER BEFORE IMMER\n      /// ...state will take every products which has in cart currently\n      // and add action.product as new product\n      return [ ...state,\n        {\n          ...action.product,\n          amount: 1\n        },\n      ];\n    */\n\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if(productIndex >= 0)\n          draft.splice(productIndex, 1);\n      });\n\n    case '@cart/UPDATE_AMOUNT':{\n      // if amount equals to 0 it will not apply changes\n      if(action.amount <= 0)\n        return state;\n\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if(productIndex >= 0)\n          draft[productIndex].amount = Number(action.amount);\n      })\n    }\n    default: // returning previous state with any changes\n      return state;\n  }\n}\n","import { createStore } from 'redux';\n\n// we cannot create a Store without any reducer\n\n// the fist reducer we'll create is Cart reducer\n/*\nfunction cart() {\n  // the state will starts with an empty array\n  return [];\n}\n\nFOR ORGANIZATION we will not create the reducers directly here,\nwe will separate in differents modules at /src/store/modules/*\nand import them here\n\nimport reducer from './modules/cart/reducer';\n*/\n\n/**\n * BUT if we have many reducers, like cart, user and so on, we will import\n * Combine Reducers?. (see README file)\n */\nimport rootReducer from './modules/rootReducer';\n\n/**\n * Integrating REactotron into with Redux\n */\nconst enhancer =\n  process.env.NODE_ENV === \"development\" ? console.tron.createEnhancer() : null;\n\n\n// when we pass only one reducer basically our state has only one information\n// that, in this moment is cart's reducer\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './config/ReactotronConfig';\n\nimport Header from './components/Header';\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\nimport store from './store';\n\n\nfunction App() {\n  /**\n   * Provider will make available the Store of our application\n   * for all components\n   */\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Header />\n        <Routes />\n        <GlobalStyle />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.879557c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.3c9a1ce5.svg\";"],"sourceRoot":""}